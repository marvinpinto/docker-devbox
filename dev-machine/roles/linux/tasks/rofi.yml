---
- name: "Install rofi"
  become: true
  apt:
    name: "rofi"
    state: "present"

- name: "Install some rofi-related goodies"
  become: true
  apt:
    name:
      - "gawk"
      - "xdotool"
      - "libxml2-utils"
    state: "present"

- name: "Put the rofi-launcher script file in place"
  become: true
  copy:
    src: "rofi-launcher.sh"
    dest: "/usr/local/bin/rofi-launcher"
    owner: "root"
    group: "root"
    mode: "0755"

- name: "Put the rofi-i3-locker script file in place"
  become: true
  copy:
    src: "rofi-i3-locker.sh"
    dest: "/usr/local/bin/rofi-i3-locker"
    owner: "root"
    group: "root"
    mode: "0755"

- name: "Put the rofi-switch-workspaces script file in place"
  become: true
  copy:
    content: |
      #!/usr/bin/env bash
      if [ -z $@ ]; then
        function gen_workspaces()
        {
          i3-msg -t get_workspaces | jq --raw-output ".[] | (.name)" | sort -n
        }
        echo temporary; gen_workspaces
      else
          WORKSPACE=$@
          if [ x"temporary" = x"${WORKSPACE}" ]; then
            i3-msg workspace scratch >/dev/null
          elif [ -n "${WORKSPACE}" ]; then
            i3-msg workspace "${WORKSPACE}" >/dev/null
          fi
      fi
    dest: "/usr/local/bin/rofi-switch-workspaces"
    owner: "root"
    group: "root"
    mode: "0755"

- name: "Put the rofi-2fa script file in place"
  become: true
  copy:
    content: |
      #!/usr/bin/env bash
      pkill -9 scdaemon || true
      ykman oath &> /dev/null
      DMENU="rofi -dmenu"
      if [ $? -eq 0 ]; then
        ykman oath code -s $(ykman oath list | ${DMENU} -i -p "Select Credential" -no-custom) | xclip -selection "clipboard"
      fi
    dest: "/usr/local/bin/rofi-2fa"
    owner: "root"
    group: "root"
    mode: "0755"

- name: "Put the rofi-emoji script file in place"
  become: true
  copy:
    src: "rofi-emoji.sh"
    dest: "/usr/local/bin/rofi-emoji"
    owner: "root"
    group: "root"
    mode: "0755"

- name: "Put the rofi-url-handler script file in place"
  become: true
  copy:
    content: |
      #!/usr/bin/env bash
      export CLIPBOARD_URL=""
      if [[ -n "$1" ]]; then
        CLIPBOARD_URL="$1"
      else
        CLIPBOARD_URL=$(xclip -o -selection clipboard)
      fi

      CLIPBOARD_URL=$(/usr/local/bin/url-cleaner "$CLIPBOARD_URL")

      DEFAULT_PROFILE="Default"
      FB_PROFILE="Profile 1"
      SB_PROFILE="Profile 2"

      option_list=("Copy to clipboard")
      case_str=$(echo ${option_list[@]} | tr ',' '\n' | sort | rofi -dmenu -i -p "URL: ${CLIPBOARD_URL}" -no-custom)

      case "${case_str}" in
        'Copy to clipboard')
          echo -ne "${CLIPBOARD_URL}" | xclip -i -selection clipboard
          ;;
        *)
          exit 0
      esac
    dest: "/usr/local/bin/rofi-url-handler"
    owner: "root"
    group: "root"
    mode: "0755"

- name: "Put the url-cleaner script file in place"
  become: true
  copy:
    src: "url-cleaner.py"
    dest: "/usr/local/bin/url-cleaner"
    owner: "root"
    group: "root"
    mode: "0755"
