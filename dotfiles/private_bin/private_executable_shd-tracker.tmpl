{{ if (and (eq .chezmoi.os "linux") (not .is_devcontainer)) -}}
#!/usr/bin/env bash

PLOT_FILE="${HOME}/projects/shd-level.csv"

# 2592000 month
# 604800 week
# 1209600 2 weeks

PLOT_ARGS="
set style line 1 lc rgb '#8b1a0e' pt 1 ps 1 lt 1 lw 2;
set style line 2 lc rgb '#5e9c36' pt 6 ps 1 lt 1 lw 2;

set style line 11 lc rgb '#808080' lt 1;
set border 3 back ls 11;
set tics nomirror;

set style line 12 lc rgb '#808080' lt 0 lw 1;
set grid back ls 12;

set boxwidth 0.5 relative;
set style fill solid 0.5 noborder;

set key top left;
set timefmt '%Y-%m-%d %H:%M:%S';
set xdata time;
set format x '%m-%d';
set xrange [time(0) - 2592000:time(0)];
set y2tics nomirror;
set ytics nomirror;
set datafile sep ',';
set xlabel 'Past 30 days';
set ylabel 'SHD level';
set y2label 'SHD Δ';

plot
\"< awk -F',' -v OFS=',' '{a[substr(\$0,0,10)]+=\$2-prev; prev=\$2} END{for(b in a){print b,a[b]}}' ${PLOT_FILE} | sort\" using 1:2 title 'SHD Δ' with boxes ls 2 axis x1y2,
\"< awk -F',' -v OFS=',' '{print \$1,\$2}' ${PLOT_FILE}\" using 1:2 title 'SHD level' smooth mcsplines ls 1 axis x1y1
"

if [[ "$1" == "--plot" ]]; then
  gnuplot -p -e "set terminal dumb size 80,30; ${PLOT_ARGS}"
elif [[ "$1" == "--plotpng" ]]; then
  gnuplot -p -e "set terminal pngcairo enhanced font 'Verdana,9'; set output '${HOME}/crap/shd-graph.png'; ${PLOT_ARGS}"
  echo "Graph available at: ${HOME}/crap/shd-graph.png"
elif [ "$1" -eq 0 -o "$1" -ne 0 ] >/dev/null 2>&1; then
  # This essentially tests whether the shell can validate the input as an integer
  touch "${PLOT_FILE}"
  d=$(date '+%Y-%m-%d %H:%M:%S')
  echo -ne "${d},${1}\n" >> "${PLOT_FILE}"
  exit 0
else
  echo "usage: $(basename $0) [--plot | --plotpng | <shd level> ]"
  exit 1
fi
{{ end -}}
