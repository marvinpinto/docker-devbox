{{- /* vim: set filetype=sh : */ -}}
{{- if (eq .chezmoi.os "linux") -}}
# Bash function to attach to, or spin up a new (named) docker container
function sink() {
  local boxname=$1
  local workdir="/home/worker"

  local vpn_container dockerargs
  if [[ "${@:2}" == vpn-* ]]; then
    vpn_container=${@:2}
  else
    dockerargs=${@:2}
  fi

  _usage() {
    echo "usage: sink <box name> [extra docker args]"
    echo "usage: sink <box name> [vpn-container_name]"
    echo "-------------------"
    echo "Examples:"
    echo "$ sink kitchensink"
    echo "$ sink kitchensink vpn-paris"
    echo "$ sink kitchensink -p 4200:4200"
  }

  if [ -z "$boxname" ]; then
    _usage
    return 1
  fi

  local projectmnt=""
  if [ -e "${HOME}/projects/${boxname}" ]; then
    workdir="/home/worker/app"
    projectmnt="-v ${HOME}/projects/${boxname}:/home/worker/app"
  fi

  local _vpn_cond_args
  if [[ -z "${vpn_container}" ]]; then
    _vpn_cond_args="--hostname ${boxname} --add-host=localgw:172.17.0.1"
  else
    _vpn_cond_args="--network=container:${vpn_container}"
  fi

  local dockerid=$(docker ps -aq --filter=name=$boxname)
  if [ "$dockerid" != "" ]; then
    echo "Attaching to existing docker container ${dockerid}"
  else
    echo "Creating new docker container"
    dockerid=$(docker run -dit \
      -e "HOSTNAME=${boxname}" \
      --log-driver=none \
      --name $boxname \
      ${_vpn_cond_args} \
      -v $SSH_AUTH_SOCK:/ssh-agent \
      -e SSH_AUTH_SOCK=/ssh-agent \
      -e DISPLAY \
      -e TERM \
      -e KITCHENSINK_CONTAINER=true \
      --security-opt=seccomp:unconfined \
      $projectmnt \
      $dockerargs \
      --workdir $workdir \
      "ghcr.io/marvinpinto/kitchensink:20.04-latest")
    docker exec -it $dockerid /bin/sh -c "/home/linuxbrew/.linuxbrew/bin/chezmoi init marvinpinto/kitchensink --source=/home/worker/dotfiles --apply"
  fi
  docker exec -it $dockerid /bin/bash
}

function _sink_completion() {
  COMPREPLY=()
  local cur="${COMP_WORDS[COMP_CWORD]}"
  local prev="${COMP_WORDS[COMP_CWORD-1]}"
  # NOTE: the "format" argument looks weird because it needs to be
  # escaped, as this file is interpreted as a chezmoi template
  local words=$(docker ps --filter "ancestor=ghcr.io/marvinpinto/kitchensink:20.04-latest" --format "{{ "{{" }}.Names{{ "}}" }}" | tr '\n' ' ' | xargs)
  case $COMP_CWORD in
    1)
      COMPREPLY=( $(compgen -W "${words}" -- "${cur}") )
      ;;
  esac
  return 0
}
complete -F _sink_completion sink
{{ end -}}
